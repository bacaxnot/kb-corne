/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <200>;
};

&mmv {
    time-to-max-speed-ms = <680>;
    acceleration-exponent = <2>;
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            require-prior-idle-ms = <125>;
        };

        td: tapdance {
            compatible = "zmk,behavior-hold-tap";
            label = "TAPDANCE";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&none  &kp Q             &kp W               &kp E       &kp R       &kp T                              &kp Y                       &kp U       &kp I       &kp O                &kp P                 &none
&none  &hm LEFT_SHIFT A  &hm LEFT_CONTROL S  &hm LALT D  &hm LGUI F  &kp G                              &kp H                       &hm RGUI J  &hm RALT K  &hm RIGHT_CONTROL L  &hm RIGHT_SHIFT SEMI  &none
&none  &kp Z             &kp X               &kp C       &kp V       &kp B                              &kp N                       &kp M       &none       &none                &kp SLASH             &none
                                             &to 1       &kp SPACE   &mt LC(UP_ARROW) LC(LEFT_ARROW)    &mt LC(UP_ARROW) LC(RIGHT)  &kp RET     &to 4
            >;
        };

        right_layer {
            bindings = <
&none  &kp ESC  &kp C_PP  &kp LEFT_PARENTHESIS           &kp RIGHT_PARENTHESIS       &kp LS(MINUS)    &kp MINUS  &kp N7   &kp N8  &kp N9  &kp COMMA     &none
&none  &kp TAB  &trans    &hm LEFT_CONTROL LEFT_BRACKET  &hm LEFT_GUI RIGHT_BRACKET  &kp LS(EQUAL)    &kp EQUAL  &kp N4   &kp N5  &kp N6  &kp NUMBER_0  &none
&none  &to 5    &kp AMPS  &kp LEFT_BRACKET               &kp RIGHT_BRACKET           &kp DOT          &kp N0     &kp N1   &kp N2  &kp N3  &kp PERIOD    &none
                          &to 0                          &kp SPACE                   &trans           &trans     &kp RET  &to 0
            >;
        };

        tri_layer {
            bindings = <
&none  &trans               &mwh SCROLL_LEFT  &mmv MOVE_UP      &mwh SCROLL_RIGHT  &kp NUM_5    &kp LG(LBKT)  &kp LC(LS(TAB))  &kp UP        &kp LC(TAB)  &trans  &none
&none  &kp LEFT_SHIFT       &kp LEFT_ALT      &kp LEFT_CONTROL  &kp LEFT_GUI       &none        &none         &kp LEFT_ARROW   &kp DOWN      &kp RIGHT    &none   &none
&none  &td LG(GRAVE) GRAVE  &mkp RCLK         &mwh SCROLL_UP    &mwh SCROLL_DOWN   &trans       &mkp LCLK     &kp PG_DN        &kp K_VOL_DN  &trans       &trans  &none
                                              &none             &trans             &to 0        &to 4         &sk RALT         &none
            >;
        };

        left_layer {
            bindings = <
&none  &kp ESC          &kp ATSN    &td LC(LG(LS(N4))) LS(N3)  &kp DLLR          &kp PRCNT    &kp CARET  &kp LS(COMMA)         &kp LS(DOT)            &kp AMPERSAND  &none  &none
&none  &kp TAB          &kp EQUAL   &kp LA(RBKT)               &kp LA(LS(RBKT))  &kp SQT      &kp BSLH   &kp LBRC              &kp RBRC               &kp PIPE       &none  &none
&none  &mt TILDE GRAVE  &kp LA(N3)  &kp LA(LBKT)               &kp LA(LS(LBKT))  &kp DQT      &kp LBKT   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp RBKT       &none  &none
                                    &none                      &kp SPACE         &trans       &trans     &kp RET               &none
            >;
        };

        bt {
            bindings = <
&none  &trans      &trans      &trans      &trans  &trans    &trans  &trans  &trans  &trans  &trans  &none
&none  &trans      &trans      &trans      &trans  &trans    &trans  &trans  &trans  &trans  &trans  &none
&none  &bt BT_PRV  &bt BT_NXT  &bt BT_CLR  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &none
                               &to 0       &trans  &none     &none   &trans  &to 4
            >;
        };
    };
};
